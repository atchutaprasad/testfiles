{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/index.ts","webpack:///./src/app/components/select-component/select-component.component.css","webpack:///./src/app/components/select-component/select-component.component.html","webpack:///./src/app/components/select-component/select-component.component.ts","webpack:///./src/app/material/index.ts","webpack:///./src/app/material/material.module.ts","webpack:///./src/app/services/backend.service.ts","webpack:///./src/app/services/index.ts","webpack:///./src/app/store/actions/action-types.enum.ts","webpack:///./src/app/store/actions/index.ts","webpack:///./src/app/store/actions/order.action.ts","webpack:///./src/app/store/effects/index.ts","webpack:///./src/app/store/effects/order.effect.ts","webpack:///./src/app/store/index.ts","webpack:///./src/app/store/reducers/index.ts","webpack:///./src/app/store/reducers/order.reducer.ts","webpack:///./src/app/store/selectors/index.ts","webpack:///./src/app/store/selectors/order.selector.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    <div class=\"container\">\n      <mat-toolbar color=\"primary\">\n        {{ title }}\n      </mat-toolbar>\n      <select-component></select-component>\n    </div>\n  `\n})\nexport class AppComponent implements OnInit {\n  title = 'Multiple dropdown test in Angular with NgRx Store';\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\n\nimport { AppComponent } from './app.component';\nimport { MaterialModule } from './material';\nimport { EFFECTS, REDUCERS, META_REDUCERS } from './store';\nimport {\n  MutilselectDropdownComponent,\n} from './components';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MutilselectDropdownComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    StoreModule.forRoot(REDUCERS, { metaReducers: META_REDUCERS }),\n    EffectsModule.forRoot(EFFECTS),\n    StoreDevtoolsModule.instrument()\n  ],\n  entryComponents: [\n   \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export * from './select-component/select-component.component';\n// export * from './bottom-sheet/bottom-sheet.component';\n","module.exports = \".full-width {\\n  flex: 1;\\n  width: 100%;\\n}\"","module.exports = \"<form [formGroup]=\\\"orderForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n    <mat-card>\\n        <mat-card-title>\\n            Region/Country Form\\n        </mat-card-title>\\n        <mat-card-content>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-12\\\">\\n                    <mat-form-field class=\\\"full-width\\\">\\n                        <!-- <label for=\\\"category\\\">Categories</label> -->\\n                        <mat-select name=\\\"category\\\" placeholder=\\\"Region\\\" formControlName=\\\"categorySelect\\\">\\n                            <mat-option *ngFor=\\\"let category of categories$ | async; trackBy: ngForTrackByFn\\\" [value]=\\\"category\\\"> {{ category.label }}\\n                            </mat-option>\\n                        </mat-select>\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"col-md-12\\\">&nbsp;</div>\\n\\n                <div class=\\\"col-md-12\\\">\\n                    <mat-form-field class=\\\"full-width\\\">\\n                        <!-- <label for=\\\"product\\\">Products</label> -->\\n                        <mat-select name=\\\"product\\\" placeholder=\\\"Country\\\" formControlName=\\\"productSelect\\\">\\n                            <mat-optgroup *ngFor=\\\"let group of products$ | async\\\" [label]=\\\"group.category.label\\\">\\n                                <mat-option *ngFor=\\\"let product of group.products; trackBy: ngForTrackByFn\\\" [value]=\\\"product\\\">\\n                                    {{ product.name }}\\n                                </mat-option>\\n                            </mat-optgroup>\\n                        </mat-select>\\n                    </mat-form-field>\\n                </div>\\n            </div>\\n        </mat-card-content>\\n\\n\\n\\n        <div class=\\\"col-md-12\\\">&nbsp;</div>\\n        <div class=\\\"col-md-12\\\">\\n            <mat-card-title *ngIf=\\\"this.orderForm.value.productSelect\\\">\\n                Country Details\\n            </mat-card-title>\\n            <table class=\\\"table\\\" *ngIf=\\\"this.orderForm.value.productSelect\\\">\\n                <thead>\\n                    <tr>\\n                        <th scope=\\\"col\\\">Name</th>\\n                        <th scope=\\\"col\\\">Capital</th>\\n                        <th scope=\\\"col\\\">Population</th>\\n                        <th scope=\\\"col\\\">Currencies</th>\\n                        <th scope=\\\"col\\\">Flag</th>\\n                    </tr>\\n                </thead>\\n                <tbody>\\n                    <tr>\\n                        <th scope=\\\"row\\\">{{orderForm.value.productSelect.name}}</th>\\n                        <td>{{orderForm.value.productSelect.capital}}</td>\\n                        <td>{{orderForm.value.productSelect.population}}</td>\\n                        <td>\\n                            <div *ngFor=\\\"let currency of orderForm.value.productSelect.currencies\\\">\\n                                Currency Code: {{currency.code}}<br> Currency Name: {{currency.name}}<br> Currency Symbol: {{currency.symbol}}<br>\\n                                <p>&nbsp;</p>\\n                            </div>\\n\\n                        </td>\\n                        <td><img src=\\\"{{orderForm.value.productSelect.flag}}\\\" width=100 /></td>\\n                    </tr>\\n\\n                </tbody>\\n            </table>\\n        </div>\\n\\n\\n    </mat-card>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatBottomSheet } from '@angular/material';\nimport { Store } from '@ngrx/store';\nimport { Observable, merge } from 'rxjs';\nimport { map, tap, withLatestFrom } from 'rxjs/operators';\n\nimport {\n  AppState,\n  LoadCategories,\n  getCategories,\n  getProducts,\n  LoadProducts\n} from '../../store';\nimport { Category, ProductsByCategory } from '../../models';\n// import { BottomSheetComponent } from '../bottom-sheet/bottom-sheet.component';\n\n@Component({\n  selector: 'select-component',\n  templateUrl: './select-component.component.html',\n  styleUrls: ['./select-component.component.css']\n})\nexport class MutilselectDropdownComponent implements OnInit {\n  orderForm: FormGroup;\n  categories$: Observable<Category[]>;\n  products$: Observable<ProductsByCategory[]>;\n  productSelectedDetails:any;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private bottomSheet: MatBottomSheet,\n    private store: Store<AppState>\n  ) {\n    this.initForm();\n    this.categories$ = this.store.select(getCategories);\n  }\n\n  initForm() {\n    this.orderForm = this.formBuilder.group({\n      categorySelect: [null, Validators.required],\n      productSelect: [{ value: null, disabled: true }, Validators.required]\n    });\n\n    const fromStore$ = this.store.select(getProducts).pipe(\n      withLatestFrom(this.orderForm.get('categorySelect').valueChanges),\n      map(([fromStore, fromForm]) => {\n       // return fromStore.filter(s => fromForm.find(f => f.id === s.category.id));\n       return fromStore.filter(s => fromForm.id === s.category.id);\n      })\n    );\n\n    const fromForm$ = this.orderForm.get('categorySelect').valueChanges.pipe(\n      map(values => values ? values : []), // check to avoid null value upon form reset\n      withLatestFrom(this.store.select(getProducts)),\n      tap(([fromForm, fromStore]: [Category, ProductsByCategory[]]) => {\n        const categories = fromForm // .filter(f => !fromStore.find(s => s.category.id === f.id));\n        /*\n        User selects one Category at at time and we dispatch action to load products for that Category.\n        So, we assume the filtered 'categories' array above to be of length 1 max.\n        */\n        // if (categories.length === 1) {\n          this.store.dispatch(new LoadProducts(categories));\n          this.orderForm.get('productSelect').reset();\n       //  } else if (categories.length > 1) {\n         // console.error('MutilselectDropdownComponent', 'Filtered multiple LoadProducts dispatch actions');\n       // }\n      }),\n      map(([fromForm, fromStore]) => {\n       // return fromStore.filter(s => fromForm.find(f => f.id === s.category.id));\n       return fromStore.filter(s => fromForm.id === s.category.id);\n      })\n    );\n\n    // emit outputs as one observable\n    this.products$ = merge(\n      fromStore$, fromForm$\n    ).pipe(\n      tap(products => {\n        const action = (products.length === 0) ? 'disable' : 'enable';\n        this.orderForm.get('productSelect')[action]();\n      })\n    );\n  }\n\n  ngOnInit() {\n    this.store.dispatch(new LoadCategories());\n  }\n\n  \n\n  \n\n  ngForTrackByFn = (index, item) => {\n    return item.id;\n  }\n\n}\n","export * from './material.module';","import { NgModule } from '@angular/core';\nimport {\n  MatToolbarModule,\n  MatCardModule,\n  MatButtonModule,\n  MatSelectModule,\n  MatListModule,\n  MatGridListModule,\n  MatBottomSheetModule\n} from '@angular/material';\n\nconst MODULES = [\n  MatToolbarModule,\n  MatCardModule,\n  MatButtonModule,\n  MatSelectModule,\n  MatListModule,\n  MatGridListModule,\n  MatBottomSheetModule\n];\n\n@NgModule({\n  imports: MODULES,\n  exports: MODULES,\n})\nexport class MaterialModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport * as Rx from \"rxjs/Rx\";\nimport { Observable, of , from, throwError} from 'rxjs';\nimport { delay, map, catchError } from 'rxjs/operators';\nimport { sortBy as _sortBy } from 'lodash';\n\n\n\n\n\nimport { Category, ProductsByCategory } from '../models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BackendService {\n\n  dataResults = [];\n\n  constructor(private httpClient: HttpClient) { \n    this.dataResults = [\n      {\n        category: { id: 1, label: 'Europe'},\n        products: [\n          { id: 11, label: 'Water'}\n        ]\n      },\n      {\n        category: { id: 2, label: 'Asia'},\n        products: [\n          { id: 21, label: 'Dairy' }\n        ]\n      }\n    ];\n    \n    \n    \n    this.getDataServices().subscribe((data:any[]) => {\n      console.log(data);\n      this.dataResults[0].products = data\n      //this.countries = data;\n    });\n\n    this.getDataServices2().subscribe((data:any[]) => {\n      console.log(data);\n      this.dataResults[1].products = data\n      //this.countries = data;\n    });\n     \n\n  }\n\n\n  getDataServices(): Observable<any[]> {\n    let headers: HttpHeaders = new HttpHeaders();\n    \n    return this.httpClient.get(\n      `https://restcountries.eu/rest/v2/region/europe`, \n       {headers: headers}\n      ).pipe(\n           map((data: any[]) => {\n             return data;\n           }), catchError( error => {\n             return throwError( 'Capital not found!' );\n           })\n        )\n    }\n\n    getDataServices2(): Observable<any[]> {\n      let headers: HttpHeaders = new HttpHeaders();\n      \n      return this.httpClient.get(\n        `https://restcountries.eu/rest/v2/region/asia`, \n         {headers: headers}\n        ).pipe(\n             map((data: any[]) => {\n               return data;\n             }), catchError( error => {\n               return throwError( 'Capital not found!' );\n             })\n          )\n      }\n  \n\n  getCategories$ = (): Observable<Category[]> => {\n    return of(this.dataResults.map(v => v.category))\n  }\n\n  getProducts$ = (category: Category): Observable<ProductsByCategory> => {\n    return of(this.dataResults.find(v => v.category.id === category.id).products).pipe(\n      map(data => {\n        return {\n          category,\n          products: this.dataResults.find(v => v.category.id === category.id).products\n        };\n      }),\n      (delay(500))\n    );\n  }\n}\n\n\n\n","export * from './backend.service';\n","export enum ActionTypes {\n  LoadCategories = '[Categories] Load',\n  LoadCategoriesSuccess = '[Categories] Load Success',\n\n  LoadProducts = '[Products] Load',\n  LoadProductsSuccess = '[Products] Load Success'\n}\n","import * as orderActions from './order.action';\n\nexport * from './action-types.enum';\nexport * from './action-with-payload';\nexport * from './order.action';\n\nexport type ActionsUnion =\n  | orderActions.LoadCategories\n  | orderActions.LoadCategoriesSuccess\n  | orderActions.LoadProducts\n  | orderActions.LoadProductsSuccess;\n","import { Action } from '@ngrx/store';\nimport { ActionTypes } from './action-types.enum';\nimport { ActionWithPayload } from './action-with-payload';\nimport { Category, ProductsByCategory } from '../../models';\n\nexport class LoadCategories implements Action {\n  readonly type = ActionTypes.LoadCategories;\n}\n\nexport class LoadCategoriesSuccess implements ActionWithPayload {\n  readonly type = ActionTypes.LoadCategoriesSuccess;\n\n  constructor(public payload: Category[]) { }\n}\n\nexport class LoadProducts implements ActionWithPayload {\n  readonly type = ActionTypes.LoadProducts;\n\n  constructor(public payload: Category) { }\n}\n\nexport class LoadProductsSuccess implements ActionWithPayload {\n  readonly type = ActionTypes.LoadProductsSuccess;\n\n  constructor(public payload: ProductsByCategory) { }\n}\n","import { OrderEffects } from './order.effect';\n\nexport const EFFECTS = [\n  OrderEffects\n];\n","import { Injectable } from '@angular/core';\nimport { Effect, Actions, ofType } from '@ngrx/effects';\nimport { switchMap, map } from 'rxjs/operators';\n\nimport {\n  ActionTypes,\n  LoadProducts,\n  LoadProductsSuccess,\n  LoadCategories,\n  LoadCategoriesSuccess\n} from '../actions';\nimport { BackendService } from '../../services';\n\n@Injectable()\nexport class OrderEffects {\n\n  constructor(\n    private actions$: Actions,\n    private backendService: BackendService\n  ) { }\n\n  @Effect()\n  loadCategories$ = this.actions$.pipe(\n    ofType<LoadCategories>(ActionTypes.LoadCategories),\n    switchMap(this.backendService.getCategories$),\n    map(result => new LoadCategoriesSuccess(result))\n  );\n\n  @Effect()\n  loadProducts$ = this.actions$.pipe(\n    ofType<LoadProducts>(ActionTypes.LoadProducts),\n    map(action => action.payload),\n    switchMap(this.backendService.getProducts$),\n    map(result => new LoadProductsSuccess(result))\n  );\n\n}\n","export * from './actions';\nexport * from './effects';\nexport * from './reducers';\nexport * from './selectors';\n","import { MetaReducer, ActionReducerMap } from '@ngrx/store';\nimport { storeFreeze } from 'ngrx-store-freeze';\n\nimport * as fromOrder from './order.reducer';\nimport { environment } from '../../../environments/environment';\n\nexport interface AppState {\n  order: fromOrder.State;\n}\n\nexport const REDUCERS: ActionReducerMap<AppState> = {\n  order: fromOrder.reducer\n};\n\nexport const META_REDUCERS: MetaReducer<AppState>[] = !environment.production ? [storeFreeze] : [];\n","import { Category, ProductsByCategory } from '../../models';\nimport { ActionTypes, ActionsUnion } from '../actions';\n\nexport interface State {\n  categories: Category[];\n  products: ProductsByCategory[];\n}\n\nconst intitialState: State = {\n  categories: [],\n  products: []\n};\n\nexport function reducer(state: State = intitialState, action: ActionsUnion) {\n  switch (action.type) {\n    case ActionTypes.LoadCategoriesSuccess: {\n      return {\n        ...state,\n        categories: action.payload\n      };\n    }\n\n    case ActionTypes.LoadProductsSuccess: {\n      return {\n        ...state,\n        products: [\n          ...state.products,\n          action.payload\n        ]\n      };\n    }\n  }\n\n  return state;\n}\n","export * from './order.selector';\n","import {\n  createSelector,\n  createFeatureSelector\n} from '@ngrx/store';\nimport { State } from '../reducers/order.reducer';\n\nconst orderFeature = createFeatureSelector<State>('order');\n\nexport const getCategories = createSelector(\n  orderFeature,\n  state => state.categories\n);\n\nexport const getProducts = createSelector(\n  orderFeature,\n  state => state.products\n);\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}